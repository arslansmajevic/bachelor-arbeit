# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# name: Java CI with Maven

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v4
#     - name: Set up JDK
#       uses: actions/setup-java@v4
#       with:
#         java-version: '22'
#         distribution: 'temurin'
#         cache: maven
#     - name: Build with Maven
#       run: mvn -B package --file pom.xml

#     # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#     - name: Update dependency graph
#       uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

name: Maven Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '22' # Matches the <java.version> in your Spring Boot application's pom.xml

    - name: Cache Maven repository
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-${{ hashFiles('data-exchange-project/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-m2

    - name: Navigate to Spring Boot application folder
      working-directory: ./data-exchange-project
      run: echo "Switched to Spring Boot application folder."

    - name: Run Maven validate
      working-directory: ./data-exchange-project
      run: mvn validate
      env:
        MAVEN_OPTS: "-Dmaven.test.failure.ignore=true"

    - name: Run Maven tests
      working-directory: ./data-exchange-project
      run: mvn clean test
      env:
        MAVEN_OPTS: "-Dmaven.test.failure.ignore=true"

    - name: Run Checkstyle
      working-directory: ./data-exchange-project
      run: mvn checkstyle:check
